services:
  message-broker:
    build:
      context: ./containers/message-broker/
    container_name: message-broker
    hostname: message-broker
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${PLANKWEB_SERVICE_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      retries: 3

  id-database:
    image: redis:7.4.2
    container_name: id-database
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      retries: 3
    command: redis-server --requirepass ${PLANKWEB_SERVICE_PASS:-guest} --save 300 1 --loglevel verbose

  celery-backend:
    image: redis:7.4.2
    container_name: celery-backend
    hostname: celery-backend
    restart: unless-stopped
    volumes:
      - celery:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      retries: 3
    command: redis-server --requirepass ${PLANKWEB_SERVICE_PASS:-guest} --save 300 1 --loglevel warning

  executor-http-api:
    build:
      context: ./containers/executor-http-api/
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: apache
    restart: unless-stopped
    volumes:
      - foldseek:/usr/local/apache2/htdocs/data/ds_foldseek
      - p2rank:/usr/local/apache2/htdocs/data/ds_p2rank
      - conservation:/usr/local/apache2/htdocs/data/conservation
      - inputs:/usr/local/apache2/htdocs/data/inputs
      - tmp:/usr/local/apache2/htdocs/data/tmp
    healthcheck:
      test: curl -f http://localhost/server-status?auto
      interval: 30s
      timeout: 30s
      retries: 3
    command: httpd -D FOREGROUND

  id-provider:
    build:
      context: ./containers
      dockerfile: ./id-provider/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: id-provider
    restart: unless-stopped
    depends_on:
      id-database:
        condition: service_healthy
    environment:
      REDIS_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
    volumes:
      - ./containers/id-provider/id-provider.py:/app/id-provider.py
    command: python -u id-provider.py

  gateway:
    build:
      context: ./
      dockerfile: ./containers/gateway/Dockerfile
      args:
        WEB_SERVICE_USER: ${PLANKWEB_SERVICE_USER:-guest}
        WEB_SERVICE_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
    container_name: gateway
    restart: unless-stopped
    depends_on:
      executor-http-api:
        condition: service_healthy
      http-server:
        condition: service_started
    ports:
      - 80:80

  http-server:
    build:
      context: ./containers
      dockerfile: ./http-server/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: http-server
    restart: unless-stopped
    depends_on:
      id-provider:
        condition: service_started
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      metatask:
        condition: service_started
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      APACHE_URL: http://apache:80/data
      ID_PROVIDER_URL: http://id-provider:5000/generate
    volumes:
      - tmp:/tmp
      - ./containers/http-server/http-server.py:/app/http-server.py
    command: gunicorn -w 4 -b :3000 http-server:app

  ds-foldseek:
    build:
      context: ./containers
      dockerfile: ./data-source-executors/executor-foldseek/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: ds-foldseek
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      APACHE_URL: http://apache:80/data
      INPUTS_URL: http://apache:80/data/inputs
    volumes:
      - foldseek:/app/results
      - ./containers/data-source-executors/executor-foldseek/foldseek_executor.py:/app/foldseek_executor.py
      - ./containers/data-source-executors/executor-foldseek/post_processor.py:/app/post_processor.py
      - ./containers/data-source-executors/data_format/builder.py:/app/data_format/builder.py
    command: celery --app=celery_worker worker --queues=ds_foldseek --hostname=foldseek_worker --loglevel=info

  ds-p2rank:
    build:
      context: ./containers
      dockerfile: ./data-source-executors/executor-p2rank/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: ds-p2rank
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
      INPUTS_URL: http://apache:80/data/inputs
      CONSERVATION_URL: http://apache:80/data/conservation
    volumes:
      - p2rank:/app/results
      - ./containers/data-source-executors/executor-p2rank/p2rank_executor.py:/app/p2rank_executor.py
      - ./containers/data-source-executors/executor-p2rank/post_processor.py:/app/post_processor.py
      - ./containers/data-source-executors/data_format/builder.py:/app/data_format/builder.py
    command: celery --app=celery_worker worker --queues=ds_p2rank --hostname=p2rank_worker --loglevel=info

  conservation:
    build:
      context: ./containers
      dockerfile: ./conservation/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: conservation
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      INPUTS_URL: http://apache:80/data/inputs
    volumes:
      - conservation:/app/results
      - ./containers/conservation/celery_worker.py:/app/celery_worker.py
      - ./containers/conservation/conservation.py:/app/conservation.py
    command: celery --app=celery_worker worker --queues=conservation --hostname=conservation_worker --loglevel=info

  converter:
    build:
      context: ./containers
      dockerfile: ./converter/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: converter
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      INPUTS_URL: http://apache:80/data/inputs
    volumes:
      - ./containers/converter/converter_executor.py:/app/converter_executor.py
    command: celery --app=celery_worker worker --queues=converter --hostname=converter_worker --loglevel=info

  metatask:
    build:
      context: ./containers
      dockerfile: ./metatask/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: metatask
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      converter:
        condition: service_started
      conservation:
        condition: service_started
      ds-foldseek:
        condition: service_started
      ds-p2rank:
        condition: service_started
    environment:
      CELERY_NAME: ${PLANKWEB_CELERY_NAME:-plankweb_tasks}
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      APACHE_URL: http://apache:80/data
    volumes:
      - inputs:/app/inputs
      - ./containers/metatask/metatask.py:/app/metatask.py
    command: celery --app=metatask worker --queues=metatask --hostname=metatask_worker --loglevel=info

  flower:
    build: https://github.com/mher/flower.git
    container_name: flower
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
    environment:
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
    command: celery flower --url_prefix=service/flower --prometheus

  gateway-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: gateway-exporter
    depends_on:
      - gateway
    command: -nginx.scrape-uri=http://gateway:8081/nginx_status

  id-database-exporter: 
    image: oliver006/redis_exporter:latest
    container_name: id-database-exporter
    depends_on:
      - id-database
    environment:
      - REDIS_ADDR=redis://id-database:6379

  celery-backend-exporter:
    image: oliver006/redis_exporter:latest
    container_name: celery-backend-exporter
    depends_on:
      - celery-backend
    environment:
      - REDIS_ADDR=redis://celery-backend:6379

  executor-http-api-exporter:
    image: bitnami/apache-exporter:latest
    container_name: apache-exporter
    depends_on:
      - executor-http-api
    command: --scrape_uri=http://apache:80/server-status?auto

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - gateway-exporter
      - id-database-exporter
      - celery-backend-exporter
      - executor-http-api-exporter
      - message-broker
      - flower
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090

  vector:
    image: timberio/vector:0.45.0-debian
    container_name: vector
    volumes:
      - ./monitoring/vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host  # allow access to Docker logs
    restart: unless-stopped
    depends_on:
      - loki

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    hostname: loki
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:11.6.0
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${PLANKWEB_SERVICE_USER:-guest}
      GF_SECURITY_ADMIN_PASSWORD: ${PLANKWEB_SERVICE_PASS:-guest}
      GF_SERVER_ROOT_URL: http://localhost/service/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: true
    volumes:
      - grafana:/var/lib/grafana

volumes:
  rabbitmq:
  redis:
  foldseek:
  p2rank:
  inputs:
  conservation:
  celery:
  grafana:
  tmp:
