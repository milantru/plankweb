services:
  message-broker:
    build:
      context: ./containers/message-broker/
    container_name: message-broker
    hostname: message-broker
    restart: unless-stopped
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      retries: 3

  id-database:
    image: redis:7.4.2
    container_name: id-database
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      retries: 3
    command: redis-server --save 300 1 --loglevel notice

  celery-backend:
    image: redis:7.4.2
    container_name: celery-backend
    hostname: celery-backend
    restart: unless-stopped
    volumes:
      - celery:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      retries: 3
    command: redis-server --save 300 1 --loglevel notice

  executor-http-api:
    build:
      context: ./containers/executor-http-api/
    container_name: apache
    restart: unless-stopped
    volumes:
      - foldseek:/usr/local/apache2/htdocs/data/ds_foldseek
      - p2rank:/usr/local/apache2/htdocs/data/ds_p2rank
      - conservation:/usr/local/apache2/htdocs/data/conservation
      - inputs:/usr/local/apache2/htdocs/data/inputs
      - tmp:/usr/local/apache2/htdocs/data/tmp
    healthcheck:
      test: curl -f http://localhost/server-status?auto
      interval: 30s
      timeout: 30s
      retries: 3
    command: httpd -D FOREGROUND

  id-provider:
    build:
      context: ./containers/id-provider/
    container_name: id-provider
    restart: unless-stopped
    depends_on:
      id-database:
        condition: service_healthy
    volumes:
      - ./containers/id-provider/id-provider.py:/app/id-provider.py
    command: python -u id-provider.py

  gateway:
    build:
      context: ./
      dockerfile: ./containers/gateway/Dockerfile
    container_name: gateway
    restart: unless-stopped
    depends_on:
      executor-http-api:
        condition: service_healthy
      http-server:
        condition: service_started
    ports:
      - 8081:8081

  http-server:
    build:
      context: ./containers/http-server/
    container_name: http-server
    restart: unless-stopped
    depends_on:
      id-provider:
        condition: service_started
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      metatask:
        condition: service_started
    env_file:
      - .env
    volumes:
      - tmp:/tmp
      - ./containers/http-server/http-server.py:/app/http-server.py
    command: gunicorn -w 4 -b :3000 http-server:app

  ds-foldseek:
    build:
      context: ./containers/data-source-executors/
      dockerfile: ./executor-foldseek/Dockerfile
    container_name: ds-foldseek
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - foldseek:/app/results
      - ./containers/data-source-executors/executor-foldseek/foldseek_executor.py:/app/foldseek_executor.py
      - ./containers/data-source-executors/executor-foldseek/post_processor.py:/app/post_processor.py
      - ./containers/data-source-executors/data_format/builder.py:/app/data_format/builder.py
    command: celery --app=celery_worker worker --queues=ds_foldseek --hostname=foldseek_worker --loglevel=info

  ds-p2rank:
    build:
      context: ./containers/data-source-executors/
      dockerfile: ./executor-p2rank/Dockerfile
    container_name: ds-p2rank
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - p2rank:/app/results
      - ./containers/data-source-executors/executor-p2rank/p2rank_executor.py:/app/p2rank_executor.py
      - ./containers/data-source-executors/executor-p2rank/post_processor.py:/app/post_processor.py
      - ./containers/data-source-executors/data_format/builder.py:/app/data_format/builder.py
    command: celery --app=celery_worker worker --queues=ds_p2rank --hostname=p2rank_worker --loglevel=info

  conservation:
    build:
      context: ./containers/conservation
    container_name: conservation
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - conservation:/app/results
      - ./containers/conservation/celery_worker.py:/app/celery_worker.py
      - ./containers/conservation/conservation.py:/app/conservation.py
    command: celery --app=celery_worker worker --queues=conservation --hostname=conservation_worker --loglevel=info

  converter:
    build:
      context: ./containers/converter/
    container_name: converter
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./containers/converter/converter_executor.py:/app/converter_executor.py
    command: celery --app=celery_worker worker --queues=converter --hostname=converter_worker --loglevel=info

  metatask:
    build:
      context: ./containers/metatask/
    container_name: metatask
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      converter:
        condition: service_started
      conservation:
        condition: service_started
      ds-foldseek:
        condition: service_started
      ds-p2rank:
        condition: service_started
    env_file:
      - .env
    volumes:
      - inputs:/app/inputs
      - ./containers/metatask/metatask.py:/app/metatask.py
    command: celery --app=metatask worker --queues=metatask --hostname=metatask_worker --loglevel=info

  flower:
    build: https://github.com/mher/flower.git
    container_name: flower
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@message-broker:5672
    ports:
      - 5555:5555
    command: celery flower --url_prefix=service/flower --prometheus

  gateway-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: gateway-exporter
    depends_on:
      - gateway
    command: -nginx.scrape-uri=http://gateway:8081/nginx_status

  id-database-exporter: 
    image: oliver006/redis_exporter:latest
    container_name: id-database-exporter
    depends_on:
      - id-database
    environment:
      - REDIS_ADDR=redis://id-database:6379

  celery-backend-exporter:
    image: oliver006/redis_exporter:latest
    container_name: celery-backend-exporter
    depends_on:
      - celery-backend
    environment:
      - REDIS_ADDR=redis://celery-backend:6379

  executor-http-api-exporter:
    image: bitnami/apache-exporter:latest
    container_name: apache-exporter
    depends_on:
      - executor-http-api
    command: --scrape_uri=http://apache:80/server-status?auto

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - gateway-exporter
      - id-database-exporter
      - celery-backend-exporter
      - executor-http-api-exporter
      - message-broker
      - flower
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - 3210:3000


volumes:
  rabbitmq:
  redis:
  foldseek:
  p2rank:
  inputs:
  conservation:
  celery:
  grafana:
  tmp:
