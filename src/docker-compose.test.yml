services:
  message-broker:
    build:
      context: ./containers/message-broker/
    container_name: message-broker
    hostname: message-broker
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${PLANKWEB_SERVICE_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      start_period: 15s
      retries: 3

  id-database:
    image: redis:7.4.2
    container_name: id-database
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      start_period: 15s
      retries: 3
    user: redis
    command: |
      redis-server
        --requirepass ${PLANKWEB_SERVICE_PASS:-guest}
        --save 300 1
        --loglevel warning

  celery-backend:
    image: redis:7.4.2
    container_name: celery-backend
    hostname: celery-backend
    restart: unless-stopped
    volumes:
      - celery:/data
    healthcheck:
      test: redis-cli info
      interval: 30s
      timeout: 30s
      start_period: 15s
      retries: 3
    user: redis
    command: |
      redis-server
        --requirepass ${PLANKWEB_SERVICE_PASS:-guest}
        --save 300 1
        --loglevel warning

  executor-http-api:
    build:
      context: ./containers/executor-http-api/
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: apache
    restart: unless-stopped
    volumes:
      - foldseek:/usr/local/apache2/htdocs/data/ds_foldseek
      - p2rank:/usr/local/apache2/htdocs/data/ds_p2rank
      - plm:/usr/local/apache2/htdocs/data/ds_plm
      - conservation:/usr/local/apache2/htdocs/data/conservation
      - inputs:/usr/local/apache2/htdocs/data/inputs
      - tmp:/usr/local/apache2/htdocs/tmp
    healthcheck:
      test: curl -f http://localhost/server-status?auto
      interval: 30s
      timeout: 30s
      start_period: 15s
      retries: 3
    command: httpd -D FOREGROUND

  id-provider: 
    build:
      context: ./containers
      dockerfile: ./id-provider/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: id-provider
    restart: unless-stopped
    depends_on:
      id-database:
        condition: service_healthy
    environment:
      REDIS_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    command: gunicorn -w 2 -b :5000 id-provider:app --log-level warning

  gateway:
    build:
      context: ./
      dockerfile: ./containers/gateway/Dockerfile
      args:
        WEB_SERVICE_USER: ${PLANKWEB_SERVICE_USER:-guest}
        WEB_SERVICE_PASS: ${PLANKWEB_SERVICE_PASS:-guest}
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://localhost:9864/}
    container_name: gateway
    restart: unless-stopped
    depends_on:
      executor-http-api:
        condition: service_healthy
      http-server:
        condition: service_started
      swagger-ui:
        condition: service_started
    ports:
      - 127.0.0.1:9864:80

  http-server:
    build:
      context: ./containers
      dockerfile: ./http-server/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: http-server
    restart: unless-stopped
    depends_on:
      id-provider:
        condition: service_started
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      metatask:
        condition: service_started
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      APACHE_URL: http://apache:80/
      ID_PROVIDER_URL: http://id-provider:5000/generate
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - tmp:/app/tmp
    command: gunicorn -w 4 -b :3000 http-server:app --log-level warning

  ds-foldseek:
    build:
      context: ./containers
      dockerfile: ./data-source-executors/executor-foldseek/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: ds-foldseek
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      INPUTS_URL: http://apache:80/data/inputs
      PLANKWEB_BASE_URL: ${PLANKWEB_URL:-http://localhost:9864}
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - foldseek:/app/results
    command: |
      celery
        --app=celery_worker worker
        --queues=ds_foldseek
        --hostname=foldseek_worker 
        --loglevel=warning
        --concurrency=4
        --events

  ds-p2rank:
    build:
      context: ./containers
      dockerfile: ./data-source-executors/executor-p2rank/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: ds-p2rank
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
      INPUTS_URL: http://apache:80/data/inputs
      CONSERVATION_URL: http://apache:80/data/conservation
      PLANKWEB_BASE_URL: ${PLANKWEB_URL:-http://localhost:9864}
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - p2rank:/app/results
    command: |
      celery
        --app=celery_worker worker
        --queues=ds_p2rank
        --hostname=p2rank_worker
        --loglevel=warning
        --concurrency=4
        --events

  ds-plm:
    build:
      context: ./containers
      dockerfile: ./data-source-executors/executor-plm/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: ds-plm
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      INPUTS_URL: http://apache:80/data/inputs
      PLANKWEB_BASE_URL: ${PLANKWEB_URL:-http://localhost:9864}
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - plm:/app/results
    command: |
      celery
        --app=celery_worker worker
        --queues=ds_plm
        --hostname=plm_worker 
        --loglevel=warning
        --concurrency=4
        --events

  conservation:
    build:
      context: ./containers
      dockerfile: ./conservation/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: conservation
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      INPUTS_URL: http://apache:80/data/inputs
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - conservation:/app/results
    command: |
      celery
        --app=celery_worker worker
        --queues=conservation
        --hostname=conservation_worker
        --loglevel=warning
        --concurrency=4
        --events

  converter:
    build:
      context: ./containers
      dockerfile: ./converter/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: converter
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      INPUTS_URL: http://apache:80/data/inputs
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    command: |
      celery
        --app=celery_worker worker
        --queues=converter
        --hostname=converter_worker
        --loglevel=warning
        --concurrency=4
        --events

  metatask:
    build:
      context: ./containers
      dockerfile: ./metatask/Dockerfile
      args:
        UID: ${PLANKWEB_DEFAULT_UID:-1453}
        GID: ${PLANKWEB_DEFAULT_GID:-1453}
    container_name: metatask
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      celery-backend:
        condition: service_healthy
      executor-http-api:
        condition: service_healthy
      converter:
        condition: service_started
      conservation:
        condition: service_started
      ds-foldseek:
        condition: service_started
      ds-p2rank:
        condition: service_started
      ds-plm:
        condition: service_started
    environment:
      CELERY_NAME: plankweb_tasks
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672// 
      CELERY_BACKEND_URL: redis://:${PLANKWEB_SERVICE_PASS:-guest}@celery-backend:6379/0
      APACHE_URL: http://apache:80/data
      LOGGING_TZ: ${PLANKWEB_TIMEZONE:-Europe/Prague}
    volumes:
      - inputs:/app/inputs
    command: |
      celery
        --app=metatask worker
        --queues=metatask
        --hostname=metatask_worker
        --loglevel=warning
        --concurrency=4
        --events

  flower:
    build: https://github.com/mher/flower.git
    container_name: flower
    restart: unless-stopped
    depends_on:
      message-broker:
        condition: service_healthy
      metatask:
        condition: service_started
    environment:
      CELERY_BROKER_URL: amqp://${PLANKWEB_SERVICE_USER:-guest}:${PLANKWEB_SERVICE_PASS:-guest}@message-broker:5672//
    command: celery flower --url_prefix=service/flower

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: openapi
    environment:
      SWAGGER_JSON: /app/swagger.yaml
    volumes:
      - ./swagger.yaml:/app/swagger.yaml

volumes:
  rabbitmq:
  redis:
  celery:
  foldseek:
  p2rank:
  plm:
  inputs:
  conservation:
  tmp:
