openapi: 3.0.0
info:
  title: "PlankWeb: Ligand Binding Site Analysis"
  version: 1.0.0

servers:
  - url: http://localhost
    description: Local development server
  - url: https://plankweb.cz
    description: Coming soon...

paths:
  /get_id:
    get:
      summary: Get ID for protein based on the input method
      description: |
        This endpoint returns an ID for a protein based on the input method.
        Supported input methods are `pdb`, `uniprot`, and `sequence`.
      parameters:
        - name: input_method
          in: query
          required: true
          schema:
            type: string
            enum:
              - pdb
              - uniprot
              - sequence
          example: pdb
        - name: protein
          in: query
          required: true
          description: |
            The identifiers for the proteins, which can be one or more of the following:
            - PDB ID
            - Uniprot ID
            - Sequence string (max. 400 chars)
          schema:
            type: string
          example: 2src
      responses:
        '200':
          description: Successful response with the protein ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID associated with the protein.
                    example: "pdb_2src"
        '400':
          description: Bad request due to invalid input method or missing protein identifier.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the problem.
  /data/inputs/{inputId}/chains.json:
    get:
      parameters:
        - in: path
          name: inputId
          required: true
          description: The generated ID of a protein
          schema:
            type: string
            example: "pdb_6xez"
      responses:
        '200':
          description: A list of available chains and their corresponding FASTA files
          content:
            application/json:
              schema:
                type: object
                properties:
                  chains:
                    type: array
                    items:
                      type: string
                    example: ["A", "B", "D", "C", "E", "F"]
                  fasta:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                    example:
                      sequence_1.fasta: ["A"]
                      sequence_2.fasta: ["B", "D"]
                      sequence_3.fasta: ["C"]
                      sequence_4.fasta: ["E", "F"]

  /data/conservation/{inputId}/status.json:
    get:
      parameters:
        - in: path
          name: inputId
          required: true
          description: The generated ID of a protein
          schema:
            type: string
            example: "pdb_2src"
      responses:
        '200':
          description:
            JSON object with status code and error messages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      The status of the conservation computation.
                        - 0: Started
                        - 1: Completed
                        - 2: Failed
                    example: 1
                  errorMessages:
                    type: string
                    description: Error message(s) if the computation failed.
                    example: ""
